buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'se.transmode.gradle:gradle-docker:1.2'
	}
}

plugins {
	id 'java'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.springframework.boot' version '2.4.2'
	id 'idea'
}

apply plugin: 'docker'

def springCloudVersion = '2020.0.0'

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-gcp-dependencies:1.2.6.RELEASE'
		mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

project.ext.gcloudBuildDir = file('build/gcloud-build/')
project.ext.gcloudProjectId = 'nlacombe-net-prod'

String gcloudDockerImageUrl

dependencies {
	implementation project(':vault-api')

	implementation "net.nlacombe:ws-utils:${depVersions.wsUtils}"
	implementation 'net.nlacombe:auth-lib:12.0.1'
	implementation 'net.nlacombe:common-lib:11.1.0'

	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-gcp-starter-sql-mysql'
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.apache.cxf:cxf-spring-boot-starter-jaxrs:3.4.2'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.6'

	implementation 'org.flywaydb:flyway-core:5.1.4'
	implementation 'javax.inject:javax.inject:1'
	implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${depVersions.jackson}"
	implementation 'org.slf4j:slf4j-api:1.7.30'

	runtimeOnly 'mysql:mysql-connector-java:8.0.23'
	runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'
	runtimeOnly 'org.javassist:javassist:3.27.0-GA'

	testImplementation 'junit:junit:4.12'
	testImplementation 'org.assertj:assertj-core:3.8.0'
	testImplementation 'org.mockito:mockito-core:2.24.5'
}

java {
	sourceCompatibility = project.javaVersion
	targetCompatibility = project.javaVersion
}

task buildDocker(type: Docker, dependsOn: assemble) {
	tag = "${project.name}"
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			from file('src/main/docker/')
			into stageDir
		}
	}
}

task buildGcloudDockerImage(type: Exec, dependsOn: assemble) {
	def buildStartTime = new Date()
	gcloudDockerImageUrl = getGcloudDockerImageUrl(buildStartTime)

	workingDir project.gcloudBuildDir
	commandLine 'gcloud', 'builds', 'submit', '--tag', gcloudDockerImageUrl

	doFirst {
		copy {
			from jar
			from file('src/main/docker/')
			into project.gcloudBuildDir
		}
	}
}

def getGcloudDockerImageUrl(date) {
	def version = project.version + '-' + getDateTimestamp(date)

	return "gcr.io/${project.gcloudProjectId}/${project.name}:${version}"
}

def static getDateTimestamp(date) {
	return date.format('yyyyMMddHHmmss')
}
